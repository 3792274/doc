cron表达式，有专门的语法，而且感觉有点绕人，不过简单来说，大家记住一些常用的用法即可，特殊的语法可以单独去查。
cron一共有7位，但是最后一位是年，可以留空，所以我们可以写6位：

* 第一位，表示秒，取值0-59
* 第二位，表示分，取值0-59
* 第三位，表示小时，取值0-23
* 第四位，日期天/日，取值1-31
* 第五位，日期月份，取值1-12
* 第六位，星期，取值1-7，星期一，星期二...，注：不是第1周，第二周的意思
          另外：1表示星期天，2表示星期一。
* 第7为，年份，可以留空，取值1970-2099
cron中，还有一些特殊的符号，含义如下：

(*)星号：可以理解为每的意思，每秒，每分，每天，每月，每年...
(?)问号：问号只能出现在日期和星期这两个位置，表示这个位置的值不确定，每天3点执行，所以第六位星期的位置，我们是不需要关注的，就是不确定的值。同时：日期和星期是两个相互排斥的元素，通过问号来表明不指定值。比如，1月10日，比如是星期1，如果在星期的位置是另指定星期二，就前后冲突矛盾了。
(-)减号：表达一个范围，如在小时字段中使用“10-12”，则表示从10到12点，即10,11,12
(,)逗号：表达一个列表值，如在星期字段中使用“1,2,4”，则表示星期一，星期二，星期四
(/)斜杠：如：x/y，x是开始值，y是步长，比如在第一位（秒） 0/15就是，从0秒开始，每15秒，最后就是0，15，30，45，60    另：*/y，等同于0/y
下面列举几个例子供大家来验证：

0 0 3 * * ?     每天3点执行
0 5 3 * * ?     每天3点5分执行
0 5 3 ? * *     每天3点5分执行，与上面作用相同
0 5/10 3 * * ?  每天3点的 5分，15分，25分，35分，45分，55分这几个时间点执行
0 10 3 ? * 1    每周星期天，3点10分 执行，注：1表示星期天    
0 10 3 ? * 1#3  每个月的第三个星期，星期天 执行，#号只能出现在星期的位置
?声明：除非注明，本站所有文章皆为原创，转载请以链接形式标明本文地址。


---------------------------------------------------
Cron
想了解Cron最好的方法是看Quartz的官方文档。本节也会大致介绍一下。

Cron表达式由6~7项组成，中间用空格分开。从左到右依次是：秒、分、时、日、月、周几、年（可省略）。值可以是数字，也可以是以下符号：
*：所有值都匹配
?：无所谓，不关心，通常放在“周几”里
,：或者
/：增量值
-：区间

下面举几个例子，看了就知道了：
0 * * * * *：每分钟（当秒为0的时候）
0 0 * * * *：每小时（当秒和分都为0的时候）
*/10 * * * * *：每10秒
0 5/15 * * * *：每小时的5分、20分、35分、50分
0 0 9,13 * * *：每天的9点和13点
0 0 8-10 * * *：每天的8点、9点、10点
0 0/30 8-10 * * *：每天的8点、8点半、9点、9点半、10点
0 0 9-17 * * MON-FRI：每周一到周五的9点、10点…直到17点（含）
0 0 0 25 12 ?：每年12约25日圣诞节的0点0分0秒（午夜）
0 30 10 * * ? 2016：2016年每天的10点半

其中的?在用法上其实和*是相同的。但是*语义上表示全匹配，而?并不代表全匹配，而是不关心。比如对于0 0 0 5 8 ? 2016来说，2016年8月5日是周五，?表示我不关心它是周几。而0 0 0 5 8 * 2016中的*表示周一也行，周二也行……语义上和2016年8月5日冲突了，你说谁优先生效呢。

不记得也没关系，记住Cron Maker也可以，它可以在线生成cron表达式。

http://www.quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/crontrigger
http://www.cronmaker.com/